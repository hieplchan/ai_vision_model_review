

================= Micronet Deep Learning Vision =================
Version: 0.2
Author: Luong Chan Hiep
Company: ARI Technology
Email: hiep.lchan@gmail.com
=================================================================




========================== Pytorch Info =========================
Working on GPU
CUDA devices count: 1
CUDA devices name: GeForce GTX 1080
=================================================================


------------
========================= MODEL SUMMARY =========================
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1         [-1, 24, 265, 481]             672
         InputConv-2         [-1, 24, 265, 481]               0
            Conv2d-3         [-1, 24, 265, 481]             240
            Conv2d-4         [-1, 48, 265, 481]           1,200
     SeperableConv-5         [-1, 48, 265, 481]               0
            Conv2d-6         [-1, 48, 133, 241]             480
            Conv2d-7         [-1, 96, 133, 241]           4,704
     SeperableConv-8         [-1, 96, 133, 241]               0
            Conv2d-9         [-1, 96, 133, 241]             960
           Conv2d-10         [-1, 96, 133, 241]           9,312
    SeperableConv-11         [-1, 96, 133, 241]               0
           Conv2d-12          [-1, 96, 67, 121]             960
           Conv2d-13         [-1, 192, 67, 121]          18,624
    SeperableConv-14         [-1, 192, 67, 121]               0
           Conv2d-15         [-1, 192, 67, 121]           1,920
           Conv2d-16         [-1, 192, 67, 121]          37,056
    SeperableConv-17         [-1, 192, 67, 121]               0
           Conv2d-18          [-1, 192, 34, 61]           1,920
           Conv2d-19          [-1, 384, 34, 61]          74,112
    SeperableConv-20          [-1, 384, 34, 61]               0
           Conv2d-21          [-1, 384, 34, 61]           3,840
           Conv2d-22          [-1, 384, 34, 61]         147,840
    SeperableConv-23          [-1, 384, 34, 61]               0
           Conv2d-24          [-1, 384, 34, 61]           3,840
           Conv2d-25          [-1, 384, 34, 61]         147,840
    SeperableConv-26          [-1, 384, 34, 61]               0
           Conv2d-27          [-1, 384, 34, 61]           3,840
           Conv2d-28          [-1, 384, 34, 61]         147,840
    SeperableConv-29          [-1, 384, 34, 61]               0
           Conv2d-30          [-1, 384, 34, 61]           3,840
           Conv2d-31          [-1, 384, 34, 61]         147,840
    SeperableConv-32          [-1, 384, 34, 61]               0
           Conv2d-33          [-1, 384, 34, 61]           3,840
           Conv2d-34          [-1, 384, 34, 61]         147,840
    SeperableConv-35          [-1, 384, 34, 61]               0
           Conv2d-36          [-1, 384, 34, 61]           3,840
           Conv2d-37          [-1, 384, 34, 61]         147,840
    SeperableConv-38          [-1, 384, 34, 61]               0
           Conv2d-39          [-1, 384, 34, 61]           3,840
           Conv2d-40          [-1, 384, 34, 61]         147,840
    SeperableConv-41          [-1, 384, 34, 61]               0
           Conv2d-42           [-1, 17, 34, 61]           6,545
           Conv2d-43           [-1, 34, 34, 61]          13,090
           Conv2d-44           [-1, 32, 34, 61]          12,320
           Conv2d-45           [-1, 32, 34, 61]          12,320
================================================================
Total params: 1,258,195
Trainable params: 1,258,195
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 5.82
Forward/backward pass size (MB): 502.42
Params size (MB): 4.80
Estimated Total Size (MB): 513.04
----------------------------------------------------------------



========================= MODEL REPORT ==========================
MobileNetV1(
  3.691 GMac, 100.000% MACs, 
  (features): Sequential(
    3.599 GMac, 97.512% MACs, 
    (conv0): InputConv(
      0.086 GMac, 2.321% MACs, 
      (conv): Conv2d(0.086 GMac, 2.321% MACs, 3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (conv1): SeperableConv(
      0.184 GMac, 4.973% MACs, 
      (depthwise): Conv2d(0.031 GMac, 0.829% MACs, 24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24)
      (pointwise): Conv2d(0.153 GMac, 4.144% MACs, 24, 48, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv2): SeperableConv(
      0.166 GMac, 4.502% MACs, 
      (depthwise): Conv2d(0.015 GMac, 0.417% MACs, 48, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=48)
      (pointwise): Conv2d(0.151 GMac, 4.085% MACs, 48, 96, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv3): SeperableConv(
      0.329 GMac, 8.920% MACs, 
      (depthwise): Conv2d(0.031 GMac, 0.834% MACs, 96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96)
      (pointwise): Conv2d(0.298 GMac, 8.087% MACs, 96, 96, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv4): SeperableConv(
      0.159 GMac, 4.302% MACs, 
      (depthwise): Conv2d(0.008 GMac, 0.211% MACs, 96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96)
      (pointwise): Conv2d(0.151 GMac, 4.091% MACs, 96, 192, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv5): SeperableConv(
      0.316 GMac, 8.561% MACs, 
      (depthwise): Conv2d(0.016 GMac, 0.422% MACs, 192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192)
      (pointwise): Conv2d(0.3 GMac, 8.139% MACs, 192, 192, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv6): SeperableConv(
      0.158 GMac, 4.272% MACs, 
      (depthwise): Conv2d(0.004 GMac, 0.108% MACs, 192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192)
      (pointwise): Conv2d(0.154 GMac, 4.164% MACs, 192, 384, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv7): SeperableConv(
      0.315 GMac, 8.523% MACs, 
      (depthwise): Conv2d(0.008 GMac, 0.216% MACs, 384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
      (pointwise): Conv2d(0.307 GMac, 8.307% MACs, 384, 384, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv8): SeperableConv(
      0.315 GMac, 8.523% MACs, 
      (depthwise): Conv2d(0.008 GMac, 0.216% MACs, 384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
      (pointwise): Conv2d(0.307 GMac, 8.307% MACs, 384, 384, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv9): SeperableConv(
      0.315 GMac, 8.523% MACs, 
      (depthwise): Conv2d(0.008 GMac, 0.216% MACs, 384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
      (pointwise): Conv2d(0.307 GMac, 8.307% MACs, 384, 384, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv10): SeperableConv(
      0.315 GMac, 8.523% MACs, 
      (depthwise): Conv2d(0.008 GMac, 0.216% MACs, 384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
      (pointwise): Conv2d(0.307 GMac, 8.307% MACs, 384, 384, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv11): SeperableConv(
      0.315 GMac, 8.523% MACs, 
      (depthwise): Conv2d(0.008 GMac, 0.216% MACs, 384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
      (pointwise): Conv2d(0.307 GMac, 8.307% MACs, 384, 384, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv12): SeperableConv(
      0.315 GMac, 8.523% MACs, 
      (depthwise): Conv2d(0.008 GMac, 0.216% MACs, 384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
      (pointwise): Conv2d(0.307 GMac, 8.307% MACs, 384, 384, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv13): SeperableConv(
      0.315 GMac, 8.523% MACs, 
      (depthwise): Conv2d(0.008 GMac, 0.216% MACs, 384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
      (pointwise): Conv2d(0.307 GMac, 8.307% MACs, 384, 384, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (heatmap): Conv2d(0.014 GMac, 0.368% MACs, 384, 17, kernel_size=(1, 1), stride=(1, 1))
  (offset): Conv2d(0.027 GMac, 0.736% MACs, 384, 34, kernel_size=(1, 1), stride=(1, 1))
  (displacement_fwd): Conv2d(0.026 GMac, 0.692% MACs, 384, 32, kernel_size=(1, 1), stride=(1, 1))
  (displacement_bwd): Conv2d(0.026 GMac, 0.692% MACs, 384, 32, kernel_size=(1, 1), stride=(1, 1))
)
Flops:  3690.97 MMac
Params: 1.26 M
Origin Width: 1920, Height: 1080
Targer Width: 961, Height: 529
Tensor Image Shape: torch.Size([3, 529, 961])
torch.Size([1, 3, 529, 961])
